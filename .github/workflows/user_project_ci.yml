name: User Project CI

on:
  push:
  # Runs on Pull Requests
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Setup Caravel environment
        run: |
          pip install click
          CARAVEL_LITE=0 make setup
      
      - name: Install IP dependencies if any
        run: |
          pip install ipmgr
          ipm install-dep
      
      # - name: Run RTL verification
      #   run: |
      #     cd $GITHUB_WORKSPACE/verilog/dv/cocotb && $GITHUB_WORKSPACE/venv-cocotb/bin/caravel_cocotb -tl user_proj_tests/user_proj_tests.yaml -verbosity debug --CI -tag rtl_verification
      #     cnt=$(grep -c "failed" "$GITHUB_WORKSPACE/verilog/dv/cocotb/sim/rtl_verification/runs.log")
      #     if ! [[ $cnt ]]; then cnt=0; fi
      #     if [[ $cnt -eq 1 ]]; then exit 0; fi
      #     exit 2

      # - name: Harden Macros
      #   run: |
      #     python3 $GITHUB_WORKSPACE/.github/scripts/get_designs.py --design $GITHUB_WORKSPACE
      #     for word in $(cat harden_sequence.txt); do
      #       echo "CURRENT_DESIGN=${word}" >> $GITHUB_ENV
      #       make $word
      #     done
      
      # - name: Create reproducible
      #   if: failure()
      #   run: tar -cf $GITHUB_WORKSPACE/issue_reproducible.tar -C $GITHUB_WORKSPACE/openlane/${{ env.CURRENT_DESIGN }}/runs/${{ env.CURRENT_DESIGN }}/issue_reproducible .
      
      # - name: upload failure logs
      #   if: failure()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: openlane-issue-reproducible
      #     path: |
      #       $GITHUB_WORKSPACE/issue_reproducible.tar

      # - name: GL Verification
      #   run: |
      #     python3 verilog/dv/add_ram_workaround.py --gl verilog/gl/SRAM_1024x32_wb_wrapper.v 
      #     cd $GITHUB_WORKSPACE/verilog/dv/cocotb && $GITHUB_WORKSPACE/venv-cocotb/bin/caravel_cocotb -tl user_proj_tests/user_proj_tests.yaml -verbosity debug --CI -tag gl_verification -sim GL
      #     cnt=$(grep -c "failed" "$GITHUB_WORKSPACE/verilog/dv/cocotb/sim/gl_verification/runs.log")
      #     if ! [[ $cnt ]]; then cnt=0; fi
      #     if [[ $cnt -eq 1 ]]; then exit 0; fi
      #     exit 2

      - name: Run precheck
        run: |
          make run-precheck-ci
      
      - name: Create reproducible
        if: failure()
        run: tar -cf $GITHUB_WORKSPACE/precheck.tar -C $GITHUB_WORKSPACE/precheck_results .
      
      - name: upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: openlane-issue-reproducible
          path: |
            $GITHUB_WORKSPACE/precheck.tar

      - name: Run STA
        run: |
          export CUP_ROOT=$GITHUB_WORKSPACE
          export PROJECT_ROOT=$GITHUB_WORKSPACE
          cd $CUP_ROOT
          make extract-parasitics
          make create-spef-mapping
          make caravel-sta
          tar -cf /tmp/timing.tar $CUP_ROOT/signoff/caravel/openlane-signoff/timing
          find $CUP_ROOT/signoff/caravel/openlane-signoff/timing/*/ -name "summary.log" | head -n1 \
            | xargs head -n5 | tail -n1 > $CUP_ROOT/signoff/caravel/openlane-signoff/timing/all-summary.rpt
          find $CUP_ROOT/signoff/caravel/openlane-signoff/timing/*/ -name "summary.log" \
            | xargs -I {} bash -c "head -n7 {} | tail -n1" >> $CUP_ROOT/signoff/caravel/openlane-signoff/timing/all-summary.rpt
          vio=$(grep -c "vio(" $CUP_ROOT/signoff/caravel/openlane-signoff/timing/all-summary.rpt || true)
          if [[ $vio -gt 0 ]];
          then 
            echo "STA violation count: $vio"
            exit 2 
          else
            echo "STA run passed"
            exit 0
          fi